{"version":3,"sources":["JS/Top.js","JS/Home.js","JS/Rental.js","App.js","serviceWorker.js","index.js"],"names":["top","class","href","id","Component","home","src","alt","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gOAEqBA,E,iLAEb,OACI,yBAAKC,MAAM,iBACH,yBAAKA,MAAM,gBACP,4BACI,4BAAI,uBAAGC,KAAK,cAAR,SACJ,4BAAI,uBAAGA,KAAK,gBAAR,YACJ,4BAAI,uBAAGA,KAAK,iBAAgBC,GAAG,YAA3B,aACJ,4BAAI,uBAAGD,KAAK,aAAaC,GAAG,sBAAxB,mB,GATCC,aCAZC,E,iLAEb,OACI,yBAAKJ,MAAM,kBACP,yBAAKA,MAAM,cACH,yBAAKK,IAAI,uCAAwCC,IAAI,kBAAkBJ,GAAG,e,GALhEC,a,mLCE1B,OACI,6BACI,yBAAKH,MAAM,oBAEH,8CACA,yBAAKA,MAAM,eAEX,yCACA,yBAAKA,MAAM,oBAInB,yBAAKA,MAAM,SACP,yBAAKA,MAAM,kBAAkBE,GAAG,iBAC5B,yBAAKF,MAAM,cACP,6CACA,yBAAKA,MAAM,gBACP,0BAAMA,MAAM,cAAcE,GAAG,aAA7B,SACA,0BAAMF,MAAM,cAAcE,GAAG,cAA7B,SACA,0BAAMF,MAAM,cAAcE,GAAG,iBAA7B,aAEJ,yBAAKF,MAAM,eAGX,yBAAKE,GAAG,UAAR,2CAGA,wBAAIF,MAAM,mBAAV,SACA,0BAAMA,MAAM,oBAAZ,MACA,4BAAQA,MAAM,iBAAd,oB,GA/BCG,aCGRI,E,iLAEjB,OACE,yBAAKP,MAAM,kBACP,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GANuBG,aCObK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.ad9b5707.chunk.js","sourcesContent":["import React,{Component} from \"react\";\r\n\r\nexport default class top extends Component{\r\n    render(){\r\n        return(\r\n            <div class=\"top-container\">   \r\n                    <nav class=\"primary-menu\">\r\n                        <ul>\r\n                            <li><a href=\"#jump-home\">Home</a></li>\r\n                            <li><a href=\"#jump-rental\">Rentals</a></li>\r\n                            <li><a href=\"#jump-location\"id=\"location\">Location</a></li>\r\n                            <li><a href=\"#jump-cart\" id=\"shopping-cart-menu\">MyCart </a></li>\r\n                        </ul>\r\n                    </nav>  \r\n            </div>\r\n        )\r\n    }\r\n}","import React,{Component} from \"react\";\r\n\r\nexport default class home extends Component{\r\n    render(){\r\n        return(\r\n            <div class=\"home-container\">\r\n                <div class=\"background\" >\r\n                        <img src=\"./Image/brooklyn-bridge-by-night.jpg\"  alt=\"brooklyn-bridge\" id=\"img1\"></img>        \r\n                </div>\r\n           \r\n                \r\n            </div>\r\n        )\r\n    }\r\n}","import React,{Component} from \"react\";\r\n\r\nexport default class extends Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div class=\"rental-container\">\r\n                    \r\n                        <h1>Featured Bikes</h1>\r\n                        <div class=\"bikes-list\"> \r\n                        </div>                 \r\n                        <h1>Accessory</h1>\r\n                        <div class=\"accessory-list\">\r\n                        </div>\r\n                    \r\n                </div>\r\n                <div class=\"modal\">\r\n                    <div class=\"modal-container\" id=\"shopping-cart\" >\r\n                        <div class=\"cart-popup\">\r\n                            <h3>Shopping Cart</h3>\r\n                            <div class=\"cart-content\">\r\n                                <span class=\"cart-header\" id=\"cart-item\">Items</span>\r\n                                <span class=\"cart-header\" id=\"cart-price\">Price</span>\r\n                                <span class=\"cart-header\" id=\"cart-quantity\">Quantity</span>\r\n                            </div>\r\n                            <div class=\"cart-items\">\r\n\r\n                            </div>\r\n                            <div id=\"notify\">\r\n                                There is nothing in your shopping cart!\r\n                            </div>\r\n                            <h3 class=\"cart-total-name\">Total</h3>\r\n                            <span class=\"cart-total-price\">$0</span>\r\n                            <button class=\"cart-checkout\">Checkout</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n               \r\n           </div>\r\n               \r\n        )\r\n    }\r\n}","import React,{Component} from \"react\";\nimport Top from \"./JS/Top\";\nimport Home from \"./JS/Home\"\nimport Rental from \"./JS/Rental\";\n\nexport default class App extends Component{\n  render(){\n    return(\n      <div class=\"main-container\">\n          <Top></Top>\n          <Home></Home>\n          <Rental></Rental>\n      </div>\n    )\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}